{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\reactapp\\\\practiceapp\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // const App = ()=>{\n//     let color = 'yellow'\n//     const [bg, update] = useState(color)\n//     const [text, updateT] = useState('Click me')\n// const Clicked = () =>{\n//    let newColor = 'red'\n//    update(newColor)\n//    updateT('Wow')\n//  }\n//   return(\n//       <>\n//          <div >\n//          <button onClick = {Clicked} style = {{backgroundColor : bg}}>{text}</button>\n//          </div>\n//          </>\n//     )\n// }\n// Input Form\n\nconst App = () => {\n  _s();\n\n  const [value, setValue] = useState({\n    fname: '',\n    password: ''\n  });\n\n  const Input = e => {\n    const [name, val] = value;\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: Input,\n        name: \"fname\",\n        value: value.fname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: Input,\n        name: \"password\",\n        value: value.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"V9EBcqjtiNGKdAAJ5CVONyYNa6o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/reactapp/practiceapp/src/App.jsx"],"names":["React","useState","App","value","setValue","fname","password","Input","e","name","val","target"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC,C,CAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAGA,MAAMC,GAAG,GAAG,MAAK;AAAA;;AAEZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;AAC/BI,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAlC;;AAKA,QAAMC,KAAK,GAAIC,CAAD,IAAK;AAChB,UAAM,CAACC,IAAD,EAAOC,GAAP,IAAcP,KAApB;AACAC,IAAAA,QAAQ,CAACI,CAAC,CAACG,MAAF,CAASR,KAAV,CAAR;AACF,GAHD;;AAOD,sBACI;AAAA,2BACA;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAII,KAA/B;AAAsC,QAAA,IAAI,EAAG,OAA7C;AAAqD,QAAA,KAAK,EAAEJ,KAAK,CAACE;AAAlE;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAIE,KAA/B;AAAsC,QAAA,IAAI,EAAG,UAA7C;AAAwD,QAAA,KAAK,EAAEJ,KAAK,CAACG;AAArE;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAQH,CAtBD;;GAAMJ,G;;KAAAA,G;AAyBN,eAAeA,GAAf","sourcesContent":["import React, { useState }  from 'react';\r\n\r\n\r\n// const App = ()=>{\r\n//     let color = 'yellow'\r\n//     const [bg, update] = useState(color)\r\n//     const [text, updateT] = useState('Click me')\r\n\r\n    \r\n// const Clicked = () =>{\r\n//    let newColor = 'red'\r\n//    update(newColor)\r\n//    updateT('Wow')\r\n   \r\n//  }\r\n\r\n \r\n//   return(\r\n//       <>\r\n         \r\n//          <div >\r\n//          <button onClick = {Clicked} style = {{backgroundColor : bg}}>{text}</button>\r\n//          </div>\r\n//          </>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n// Input Form\r\n\r\n\r\nconst App = () =>{\r\n     \r\n     const [value, setValue] = useState({\r\n         fname: '',\r\n         password: ''\r\n     })\r\n\r\n     const Input = (e)=>{\r\n        const [name, val] = value\r\n        setValue(e.target.value)\r\n     }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <div>\r\n        <input type=\"text\" onChange = {Input} name = \"fname\" value={value.fname}/>\r\n        <input type=\"text\" onChange = {Input} name = \"password\" value={value.password}/>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}