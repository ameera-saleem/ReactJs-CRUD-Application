{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\reactapp\\\\practiceapp\\\\src\\\\Login\\\\Auth.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withRouter } from \"react-router\";\n\nconst Auth = () => {\n  _s();\n\n  const [Register, setRegister] = useState();\n  const [empty, setEmpty] = useState(false);\n  const [error, setError] = useState(false);\n  const [value, setValue] = useState({\n    email: '',\n    password: ''\n  });\n\n  const inputValue = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValue(prevData => {\n      return { ...prevData,\n        [name]: value\n      };\n    });\n  };\n\n  const Onsubmit = () => {\n    if (value.email === '' && value.password === '') {\n      setEmpty(true);\n      setTimeout(() => {\n        setEmpty(false);\n      }, 2000);\n      return;\n    } // window.location.reload()\n\n\n    try {\n      fetch('http://localhost:8000/auth/login', {\n        method: 'POST',\n        headers: {\n          \"Accept\": 'application/json',\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify(value)\n      }).then(response => response.json()).then(result => {\n        if (result.status !== 'ok') {\n          setError(true);\n          setTimeout(() => {\n            setError(false);\n          }, 2000);\n          return;\n        }\n\n        {\n          value !== 'undefined' && value !== null ? localStorage.setItem(\"auth\", JSON.stringify(result.access_token)) : console.log('null');\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onRegister = () => {\n    window.location.reload();\n\n    try {\n      fetch('http://localhost:8000/auth/register', {\n        method: 'POST',\n        headers: {\n          \"Accept\": 'application/json',\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify(value)\n      }).then(response => response.json()).then(result => {\n        {\n          value !== 'undefined' && value !== null ? localStorage.setItem(\"auth\", JSON.stringify(result.access_token)) : console.log('null');\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !Register ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: inputValue,\n        value: value.email,\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 10\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 99\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Incorrect email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: inputValue,\n        value: value.password,\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 108\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Incorrect password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }, this) : null, empty ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Please Fill in your field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Onsubmit,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRegister(true),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: inputValue,\n        value: value.email,\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 98\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: inputValue,\n        value: value.password,\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 107\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRegister(false),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Auth, \"vnchAymJCjg8C1QBN1FGJgAx85c=\");\n\n_c = Auth;\nexport default _c2 = withRouter(Auth);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Auth\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/reactapp/practiceapp/src/Login/Auth.jsx"],"names":["React","useState","withRouter","Auth","Register","setRegister","empty","setEmpty","error","setError","value","setValue","email","password","inputValue","event","name","target","prevData","Onsubmit","setTimeout","fetch","method","headers","body","JSON","stringify","then","response","json","result","status","localStorage","setItem","access_token","console","log","onRegister","window","location","reload","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAMA,MAAMC,IAAI,GAAG,MAAI;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,EAAxC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC;AAC/BW,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAlC;;AAMA,QAAMC,UAAU,GAAIC,KAAD,IAAU;AACzB,UAAM;AAACC,MAAAA,IAAD;AAAON,MAAAA;AAAP,QAAgBK,KAAK,CAACE,MAA5B;AACAN,IAAAA,QAAQ,CAAEO,QAAD,IAAa;AACpB,aAAO,EAAC,GAAGA,QAAJ;AACL,SAACF,IAAD,GAASN;AADJ,OAAP;AAED,KAHO,CAAR;AAKH,GAPD;;AAUA,QAAMS,QAAQ,GAAG,MAAK;AACpB,QAAGT,KAAK,CAACE,KAAN,KAAgB,EAAhB,IAAsBF,KAAK,CAACG,QAAN,KAAmB,EAA5C,EAA+C;AAC7CN,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAa,MAAAA,UAAU,CAAC,MAAM;AACfb,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,OAFS,EAEP,IAFO,CAAV;AAGA;AACD,KAPmB,CAQpB;;;AAEA,QAAG;AAAEc,MAAAA,KAAK,CAAC,kCAAD,EAAqC;AAC7CC,QAAAA,MAAM,EAAG,MADoC;AAE7CC,QAAAA,OAAO,EAAG;AACR,oBAAW,kBADH;AAER,0BAAiB;AAFT,SAFmC;AAM7CC,QAAAA,IAAI,EACHC,IAAI,CAACC,SAAL,CAAehB,KAAf;AAP4C,OAArC,CAAL,CASHiB,IATG,CASEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATd,EAS+BF,IAT/B,CASqCG,MAAD,IAAY;AAClD,YAAGA,MAAM,CAACC,MAAP,KAAkB,IAArB,EAA0B;AACxBtB,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACAW,UAAAA,UAAU,CAAC,MAAM;AACfX,YAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,WAFS,EAEP,IAFO,CAAV;AAGA;AACD;;AAEH;AAAGC,UAAAA,KAAK,KAAK,WAAV,IAAyBA,KAAK,KAAK,IAAnC,GAA0CsB,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BR,IAAI,CAACC,SAAL,CAAeI,MAAM,CAACI,YAAtB,CAA5B,CAA1C,GAA6GC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAA7G;AAAkI;AAIpI,OAtBG;AAwBJ,KAxBD,CAyBA,OAAO5B,KAAP,EAAc;AACZ2B,MAAAA,OAAO,CAACC,GAAR,CAAY5B,KAAZ;AACD;AAEF,GAvCD;;AAyCA,QAAM6B,UAAU,GAAG,MAAK;AAEtBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;;AAEA,QAAG;AAAEnB,MAAAA,KAAK,CAAC,qCAAD,EAAwC;AAChDC,QAAAA,MAAM,EAAG,MADuC;AAEhDC,QAAAA,OAAO,EAAG;AACR,oBAAW,kBADH;AAER,0BAAiB;AAFT,SAFsC;AAMhDC,QAAAA,IAAI,EACHC,IAAI,CAACC,SAAL,CAAehB,KAAf;AAP+C,OAAxC,CAAL,CASHiB,IATG,CASEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATd,EAS+BF,IAT/B,CASqCG,MAAD,IAAY;AAEpD;AAAGpB,UAAAA,KAAK,KAAK,WAAV,IAAyBA,KAAK,KAAK,IAAnC,GAA0CsB,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BR,IAAI,CAACC,SAAL,CAAeI,MAAM,CAACI,YAAtB,CAA5B,CAA1C,GAA6GC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAA7G;AAAkI;AAIpI,OAfG;AAiBJ,KAjBD,CAkBA,OAAO5B,KAAP,EAAc;AACZ2B,MAAAA,OAAO,CAACC,GAAR,CAAY5B,KAAZ;AACD;AACF,GAzBD;;AA4BA,sBACI;AAAA,cACC,CAACJ,QAAD,gBACA;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAIU,UAA/B;AAA2C,QAAA,KAAK,EAAIJ,KAAK,CAACE,KAA1D;AAAiE,QAAA,IAAI,EAAG;AAAxE;AAAA;AAAA;AAAA;AAAA,cADA,oBACyF;AAAA;AAAA;AAAA;AAAA,cADzF,EAECJ,KAAK,gBAAG;AAAG,QAAA,KAAK,EAAI;AAACiC,UAAAA,KAAK,EAAG;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAAwD,IAF9D,eAGA;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAI3B,UAAnC;AAA+C,QAAA,KAAK,EAAIJ,KAAK,CAACG,QAA9D;AAAwE,QAAA,IAAI,EAAG;AAA/E;AAAA;AAAA;AAAA;AAAA,cAHA,eAGkG;AAAA;AAAA;AAAA;AAAA,cAHlG,EAICL,KAAK,gBAAG;AAAG,QAAA,KAAK,EAAI;AAACiC,UAAAA,KAAK,EAAG;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA2D,IAJjE,EAKCnC,KAAK,gBAAG;AAAG,QAAA,KAAK,EAAI;AAACmC,UAAAA,KAAK,EAAG;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAAkE,IALxE,eAMD;AAAQ,QAAA,OAAO,EAAItB,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANC,eAOD;AAAQ,QAAA,OAAO,EAAI,MAAMd,WAAW,CAAC,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPC;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAWD;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAIS,UAA/B;AAA2C,QAAA,KAAK,EAAIJ,KAAK,CAACE,KAA1D;AAAiE,QAAA,IAAI,EAAG;AAAxE;AAAA;AAAA;AAAA;AAAA,cADA,oBACyF;AAAA;AAAA;AAAA;AAAA,cADzF,eAEA;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAIE,UAAnC;AAA+C,QAAA,KAAK,EAAIJ,KAAK,CAACG,QAA9D;AAAwE,QAAA,IAAI,EAAG;AAA/E;AAAA;AAAA;AAAA;AAAA,cAFA,eAEkG;AAAA;AAAA;AAAA;AAAA,cAFlG,eAIA;AAAQ,QAAA,OAAO,EAAIwB,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA;AAAQ,QAAA,OAAO,EAAI,MAAMhC,WAAW,CAAC,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA,mBADJ;AA0BH,CApHD;;GAAMF,I;;KAAAA,I;AAuHN,qBAAeD,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import React, { useState } from 'react';\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\n\r\n\r\n\r\nconst Auth = ()=>{\r\n  \r\n    const [Register, setRegister] = useState()\r\n    const [empty, setEmpty] = useState(false)\r\n    const [error, setError] = useState(false)\r\n    const [value, setValue] = useState({\r\n        email: '',\r\n        password: ''\r\n      })\r\n\r\n\r\n    const inputValue = (event) =>{\r\n        const {name, value} = event.target\r\n        setValue((prevData) =>{\r\n          return {...prevData,\r\n            [name] : value}\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    const Onsubmit = () =>{\r\n      if(value.email === '' && value.password === ''){\r\n        setEmpty(true)\r\n        setTimeout(() => {\r\n          setEmpty(false)\r\n        }, 2000);\r\n        return ;\r\n      }\r\n      // window.location.reload()\r\n      \r\n      try{ fetch('http://localhost:8000/auth/login', {\r\n        method : 'POST',\r\n        headers : {\r\n          \"Accept\" : 'application/json',\r\n          \"Content-Type\" : 'application/json'\r\n        },\r\n        body : \r\n         JSON.stringify(value)\r\n       })\r\n       .then(response => response.json()).then((result) => {\r\n         if(result.status !== 'ok'){\r\n           setError(true)\r\n           setTimeout(() => {\r\n             setError(false)\r\n           }, 2000);\r\n           return\r\n         }\r\n        \r\n       {  value !== 'undefined' && value !== null ? localStorage.setItem(\"auth\",JSON.stringify(result.access_token)) : console.log('null') }\r\n         \r\n          \r\n         \r\n       })\r\n       \r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n      }\r\n     \r\n    }\r\n\r\n    const onRegister = () =>{\r\n\r\n      window.location.reload()\r\n      \r\n      try{ fetch('http://localhost:8000/auth/register', {\r\n        method : 'POST',\r\n        headers : {\r\n          \"Accept\" : 'application/json',\r\n          \"Content-Type\" : 'application/json'\r\n        },\r\n        body : \r\n         JSON.stringify(value)\r\n       })\r\n       .then(response => response.json()).then((result) => {\r\n        \r\n       {  value !== 'undefined' && value !== null ? localStorage.setItem(\"auth\",JSON.stringify(result.access_token)) : console.log('null') }\r\n         \r\n          \r\n         \r\n       })\r\n       \r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        {!Register ?\r\n         <div>\r\n         <input type='text' onChange = {inputValue} value = {value.email} name = \"email\"></input> <br/> \r\n         {error ? <p style = {{color : 'white'}}>Incorrect email</p> : null } \r\n         <input type='password' onChange = {inputValue} value = {value.password} name = 'password'></input><br/>\r\n         {error ? <p style = {{color : 'white'}}>Incorrect password</p> : null } \r\n         {empty ? <p style = {{color : 'white'}}>Please Fill in your field</p> : null }\r\n        <button onClick = {Onsubmit}>Login</button> \r\n        <button onClick = {() => setRegister(true) }>Register</button> \r\n        </div>\r\n        :\r\n        <div>\r\n        <input type='text' onChange = {inputValue} value = {value.email} name = \"email\"></input> <br/>\r\n        <input type='password' onChange = {inputValue} value = {value.password} name = 'password'></input><br/>\r\n        \r\n        <button onClick = {onRegister}>Register</button> \r\n        <button onClick = {() => setRegister(false)}>Login</button> \r\n        </div>\r\n         }\r\n       \r\n\r\n       \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(Auth)"]},"metadata":{},"sourceType":"module"}