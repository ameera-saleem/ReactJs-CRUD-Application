{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\reactapp\\\\practiceapp\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // const App = ()=>{\n//     let color = 'yellow'\n//     const [bg, update] = useState(color)\n//     const [text, updateT] = useState('Click me')\n// const Clicked = () =>{\n//    let newColor = 'red'\n//    update(newColor)\n//    updateT('Wow')\n//  }\n//   return(\n//       <>\n//          <div >\n//          <button onClick = {Clicked} style = {{backgroundColor : bg}}>{text}</button>\n//          </div>\n//          </>\n//     )\n// }\n// Input Form\n\nconst App = () => {\n  _s();\n\n  const [submitted, setSubmitted] = useState(false);\n  const [valid, setValid] = useState(false);\n  const [value, setValue] = useState({\n    fname: '',\n    password: ''\n  });\n\n  const handleInputName = e => {\n    setValue({ ...value,\n      fname: e.target.value\n    });\n  };\n\n  const handleInputPassword = e => {\n    setValue({ ...value,\n      password: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (value.fname && value.password) {\n      setValid(true);\n    }\n\n    setSubmitted(true);\n    console.log(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleInputName,\n          name: \"fname\",\n          value: value.fname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), submitted && valid ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 31\n        }, this) : null, submitted && !value ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please Fill in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 32\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleInputPassword,\n          name: \"password\",\n          value: value.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"EiTcZbym3N1BvebpXw5Kli2Sg24=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/reactapp/practiceapp/src/App.jsx"],"names":["React","useState","App","submitted","setSubmitted","valid","setValid","value","setValue","fname","password","handleInputName","e","target","handleInputPassword","onSubmit","preventDefault","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC,C,CAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAGA,MAAMC,GAAG,GAAG,MAAK;AAAA;;AACZ,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BH,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AAC/BQ,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAlC;;AAKA,QAAMC,eAAe,GAAIC,CAAD,IAAK;AAC1BJ,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWE,MAAAA,KAAK,EAACG,CAAC,CAACC,MAAF,CAASN;AAA1B,KAAD,CAAR;AACF,GAFD;;AAIA,QAAMO,mBAAmB,GAAIF,CAAD,IAAK;AAC9BJ,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWG,MAAAA,QAAQ,EAACE,CAAC,CAACC,MAAF,CAASN;AAA7B,KAAD,CAAR;AACF,GAFD;;AAIA,QAAMQ,QAAQ,GAAIH,CAAD,IAAK;AAClBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAGT,KAAK,CAACE,KAAN,IAAeF,KAAK,CAACG,QAAxB,EAAiC;AAC7BJ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACDa,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACF,GAPD;;AAUD,sBACI;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAGQ,QAAjB;AAAA,6BACA;AAAA,gCACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAIJ,eAA/B;AAAgD,UAAA,IAAI,EAAG,OAAvD;AAA+D,UAAA,KAAK,EAAEJ,KAAK,CAACE;AAA5E;AAAA;AAAA;AAAA;AAAA,gBADA,EAECN,SAAS,IAAIE,KAAb,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAArB,GAAqC,IAFtC,EAGCF,SAAS,IAAI,CAACI,KAAd,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAtB,GAA8C,IAH/C,eAIA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAIO,mBAA/B;AAAoD,UAAA,IAAI,EAAG,UAA3D;AAAsE,UAAA,KAAK,EAAEP,KAAK,CAACG;AAAnF;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AAAQ,UAAA,IAAI,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAcH,CAxCD;;GAAMR,G;;KAAAA,G;AA2CN,eAAeA,GAAf","sourcesContent":["import React, { useState }  from 'react';\r\n\r\n\r\n// const App = ()=>{\r\n//     let color = 'yellow'\r\n//     const [bg, update] = useState(color)\r\n//     const [text, updateT] = useState('Click me')\r\n\r\n    \r\n// const Clicked = () =>{\r\n//    let newColor = 'red'\r\n//    update(newColor)\r\n//    updateT('Wow')\r\n   \r\n//  }\r\n\r\n \r\n//   return(\r\n//       <>\r\n         \r\n//          <div >\r\n//          <button onClick = {Clicked} style = {{backgroundColor : bg}}>{text}</button>\r\n//          </div>\r\n//          </>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n// Input Form\r\n\r\n\r\nconst App = () =>{\r\n     const [submitted,setSubmitted] = useState(false);\r\n     const [valid, setValid] = useState(false)\r\n     const [value, setValue] = useState({\r\n         fname: '',\r\n         password: ''\r\n     })\r\n\r\n     const handleInputName = (e)=>{\r\n        setValue({...value, fname:e.target.value})\r\n     }\r\n\r\n     const handleInputPassword = (e)=>{\r\n        setValue({...value, password:e.target.value})\r\n     }\r\n\r\n     const onSubmit = (e)=>{\r\n         e.preventDefault()\r\n         if(value.fname && value.password){\r\n             setValid(true)\r\n         }\r\n         setSubmitted(true)\r\n        console.log(value)\r\n     }\r\n\r\n\r\n    return(\r\n        <>\r\n        <form onSubmit ={onSubmit}>\r\n        <div>\r\n        <input type=\"text\" onChange = {handleInputName} name = \"fname\" value={value.fname}/>\r\n        {submitted && valid ? <p>Success</p>: null} \r\n        {submitted && !value ? <p>Please Fill in</p> : null}  \r\n        <input type=\"text\" onChange = {handleInputPassword} name = \"password\" value={value.password}/>\r\n        <button type = 'submit'>Submit</button>\r\n        </div>\r\n        </form>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}