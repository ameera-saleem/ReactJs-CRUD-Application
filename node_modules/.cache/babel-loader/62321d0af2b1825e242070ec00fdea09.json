{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from \"react-router\";\n\nconst Data = () => {\n  _s();\n\n  const [data, setData] = useState();\n  useEffect(() => {\n    (async function () {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        const json = await response.json();\n        setData(json);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data && data.forEach(data => console.log(data.name))\n  }, void 0, false);\n};\n\n_s(Data, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = Data;\nexport default _c2 = withRouter(Data); // try{\n//     fetch ('https://jsonplaceholder.typicode.com/users')\n//     .then( response => {\n//       if (response.ok) {\n//           return response.json() \n//       }\n//   }).then((result) => {\n//      console.log(result)\n//      })\n//     }\n//    catch (error) {\n//     console.log(error)\n//    }}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Data\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/reactapp/practiceapp/src/Login/Data.jsx"],"names":["React","useEffect","useState","withRouter","Data","data","setData","response","fetch","json","e","console","error","forEach","log","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAMA,MAAMC,IAAI,GAAI,MAAI;AAAA;;AAEf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,EAAhC;AACCD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,kBAAiB;AACd,UAAI;AACA,cAAMM,QAAQ,GAAG,MAAMC,KAAK,CACxB,4CADwB,CAA5B;AAGA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACDH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACF,OAND,CAME,OAAOC,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;AACJ,KAVD;AAWH,GAZQ,EAYN,EAZM,CAAT;AAgBA,sBACI;AAAA,cACHL,IAAI,IAAIA,IAAI,CAACQ,OAAL,CAAaR,IAAI,IAAIM,OAAO,CAACG,GAAR,CAAYT,IAAI,CAACU,IAAjB,CAArB;AADL,mBADJ;AAKH,CAxBD;;GAAMX,I;;KAAAA,I;AA2BN,qBAAeD,UAAU,CAACC,IAAD,CAAzB,C,CAIA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\n\r\n\r\n\r\nconst Data =  ()=>{\r\n   \r\n   const [data, setData] = useState ()\r\n    useEffect(() => {\r\n        (async function() {\r\n            try {\r\n                const response = await fetch(\r\n                    'https://jsonplaceholder.typicode.com/users'\r\n                );\r\n                const json = await response.json();\r\n               setData(json)\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n\r\n    \r\n    return(\r\n        <>\r\n    {data && data.forEach(data => console.log(data.name)) } \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(Data)\r\n\r\n\r\n\r\n// try{\r\n//     fetch ('https://jsonplaceholder.typicode.com/users')\r\n//     .then( response => {\r\n//       if (response.ok) {\r\n        \r\n//           return response.json() \r\n          \r\n//       }\r\n//   }).then((result) => {\r\n//      console.log(result)\r\n//      })\r\n     \r\n//     }\r\n//    catch (error) {\r\n//     console.log(error)\r\n//    }}"]},"metadata":{},"sourceType":"module"}