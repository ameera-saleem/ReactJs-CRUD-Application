{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\reactapp\\\\practiceapp\\\\src\\\\Login\\\\Auth.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withRouter } from \"react-router\";\n\nconst Auth = () => {\n  _s();\n\n  const [Register, setRegister] = useState();\n  const [value, setValue] = useState({\n    email: '',\n    password: ''\n  });\n\n  const inputValue = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValue(prevData => {\n      return { ...prevData,\n        [name]: value\n      };\n    });\n  };\n\n  const Onsubmit = () => {\n    window.location.reload();\n\n    try {\n      fetch('http://localhost:8000/auth/login', {\n        method: 'POST',\n        headers: {\n          \"Accept\": 'application/json',\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify(value)\n      }).then(response => response.json()).then(result => {\n        localStorage.setItem(\"auth\", JSON.stringify(result.access_token));\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: inputValue,\n      value: value.email,\n      name: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 98\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: inputValue,\n      value: value.password,\n      name: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 108\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Onsubmit,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Auth, \"4Ja0ZjoTnsIVJe2T3vXA8/XCHgk=\");\n\n_c = Auth;\nexport default _c2 = withRouter(Auth);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Auth\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/reactapp/practiceapp/src/Login/Auth.jsx"],"names":["React","useState","withRouter","Auth","Register","setRegister","value","setValue","email","password","inputValue","event","name","target","prevData","Onsubmit","window","location","reload","fetch","method","headers","body","JSON","stringify","then","response","json","result","localStorage","setItem","access_token","error","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAMA,MAAMC,IAAI,GAAG,MAAI;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,EAAxC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAC/BO,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAlC;;AAMA,QAAMC,UAAU,GAAIC,KAAD,IAAU;AACzB,UAAM;AAACC,MAAAA,IAAD;AAAON,MAAAA;AAAP,QAAgBK,KAAK,CAACE,MAA5B;AACAN,IAAAA,QAAQ,CAAEO,QAAD,IAAa;AACpB,aAAO,EAAC,GAAGA,QAAJ;AACL,SAACF,IAAD,GAASN;AADJ,OAAP;AAED,KAHO,CAAR;AAKH,GAPD;;AAUA,QAAMS,QAAQ,GAAG,MAAK;AACpBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;;AAEA,QAAG;AAAEC,MAAAA,KAAK,CAAC,kCAAD,EAAqC;AAC7CC,QAAAA,MAAM,EAAG,MADoC;AAE7CC,QAAAA,OAAO,EAAG;AACR,oBAAW,kBADH;AAER,0BAAiB;AAFT,SAFmC;AAM7CC,QAAAA,IAAI,EACHC,IAAI,CAACC,SAAL,CAAelB,KAAf;AAP4C,OAArC,CAAL,CASHmB,IATG,CASEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATd,EAS+BF,IAT/B,CASqCG,MAAD,IAAY;AACjDC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BP,IAAI,CAACC,SAAL,CAAeI,MAAM,CAACG,YAAtB,CAA5B;AAGF,OAbG;AAeJ,KAfD,CAgBA,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AAEF,GAvBD;;AAwBA,sBACI;AAAA,4BAgBA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAItB,UAA/B;AAA2C,MAAA,KAAK,EAAIJ,KAAK,CAACE,KAA1D;AAAiE,MAAA,IAAI,EAAG;AAAxE;AAAA;AAAA;AAAA;AAAA,YAhBA,oBAgByF;AAAA;AAAA;AAAA;AAAA,YAhBzF,eAiBC;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAIE,UAAnC;AAA+C,MAAA,KAAK,EAAIJ,KAAK,CAACG,QAA9D;AAAwE,MAAA,IAAI,EAAG;AAA/E;AAAA;AAAA;AAAA;AAAA,YAjBD,eAiBmG;AAAA;AAAA;AAAA;AAAA,YAjBnG,eAkBA;AAAQ,MAAA,OAAO,EAAIM,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBA;AAAA,kBADJ;AAwBH,CAnED;;GAAMZ,I;;KAAAA,I;AAsEN,qBAAeD,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import React, { useState } from 'react';\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\n\r\n\r\n\r\nconst Auth = ()=>{\r\n  \r\n    const [Register, setRegister] = useState()\r\n    const [value, setValue] = useState({\r\n        email: '',\r\n        password: ''\r\n      })\r\n\r\n\r\n    const inputValue = (event) =>{\r\n        const {name, value} = event.target\r\n        setValue((prevData) =>{\r\n          return {...prevData,\r\n            [name] : value}\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    const Onsubmit = () =>{\r\n      window.location.reload()\r\n      \r\n      try{ fetch('http://localhost:8000/auth/login', {\r\n        method : 'POST',\r\n        headers : {\r\n          \"Accept\" : 'application/json',\r\n          \"Content-Type\" : 'application/json'\r\n        },\r\n        body : \r\n         JSON.stringify(value)\r\n       })\r\n       .then(response => response.json()).then((result) => {\r\n          localStorage.setItem(\"auth\",JSON.stringify(result.access_token))\r\n          \r\n         \r\n       })\r\n       \r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n      }\r\n     \r\n    }\r\n    return(\r\n        <>\r\n        {/* {Register ?\r\n         <div>\r\n         <input type='text' onChange = {inputValue} value = {value.email} name = \"email\"></input> <br/>\r\n         <input type='password' onChange = {inputValue} value = {value.password} name = 'password'></input><br/>\r\n        <button onClick = {Onsubmit}>Login</button> \r\n        <button onClick = {() => setRegister ({Register : true})}>Register</button> \r\n        </div>\r\n        :\r\n        <div>\r\n        <input type='text' onChange = {inputValue} value = {value.email} name = \"email\"></input> <br/>\r\n        <input type='password' onChange = {inputValue} value = {value.password} name = 'password'></input><br/>\r\n       <button onClick = {Onsubmit}>Login</button> \r\n       <button onClick = {() => setRegister ({Register : false})}>Login</button> \r\n       </div>\r\n         } */}\r\n        <input type='text' onChange = {inputValue} value = {value.email} name = \"email\"></input> <br/>\r\n         <input type='password' onChange = {inputValue} value = {value.password} name = 'password'></input><br/>\r\n        <button onClick = {Onsubmit}>Login</button> \r\n\r\n       \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(Auth)"]},"metadata":{},"sourceType":"module"}