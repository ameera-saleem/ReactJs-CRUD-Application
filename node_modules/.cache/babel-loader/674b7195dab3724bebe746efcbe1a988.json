{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\reactapp\\\\practiceapp\\\\src\\\\Login\\\\Data.jsx\";\nimport React, { useeffect } from 'react';\nimport { withRouter } from \"react-router\";\n\nconst Data = () => {\n  useeffect(() => {\n    try {\n      fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      }).then(result => {\n        console.log(result);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_c = Data;\nexport default _c2 = withRouter(Data);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Data\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/reactapp/practiceapp/src/Login/Data.jsx"],"names":["React","useeffect","withRouter","Data","fetch","then","response","ok","json","result","console","log","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAMA,MAAMC,IAAI,GAAG,MAAI;AACXF,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG;AACDG,MAAAA,KAAK,CAAE,4CAAF,CAAL,CACCC,IADD,CACOC,QAAQ,IAAI;AACjB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AAEb,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AAEH;AACJ,OAPC,EAOCH,IAPD,CAOOI,MAAD,IAAY;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACC,OATF;AAWC,KAZH,CAaC,OAAOG,KAAP,EAAc;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA;AAAC,GAhBE,CAAT;AAmBF,sBACI;AAAA,2BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBADJ;AAKH,CAzBD;;KAAMT,I;AA4BN,qBAAeD,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import React, {useeffect} from 'react';\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\n\r\n\r\n\r\nconst Data = ()=>{\r\n      useeffect(()=>{\r\n          try{\r\n            fetch ('https://jsonplaceholder.typicode.com/users')\r\n            .then( response => {\r\n              if (response.ok) {\r\n                \r\n                  return response.json() \r\n                  \r\n              }\r\n          }).then((result) => {\r\n             console.log(result)\r\n             })\r\n             \r\n            }\r\n           catch (error) {\r\n            console.log(error)\r\n           }})\r\n      \r\n    \r\n    return(\r\n        <>\r\n     <h2>Data</h2>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(Data)"]},"metadata":{},"sourceType":"module"}