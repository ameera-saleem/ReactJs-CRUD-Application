{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\reactapp\\\\practiceapp\\\\src\\\\Login\\\\Protected.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\n\nconst Protected = ({\n  component: Component,\n  ...rest\n}) => {\n  //  If Auth is Available Redirect User to Home else to Login Page\n  const isUser = JSON.parse(localStorage.getItem(\"auth\"));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => {\n        if (isUser) {\n          return /*#__PURE__*/_jsxDEV(Component, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 24\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: {\n              pathname: '/',\n              state: {\n                from: props.location\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = Protected;\nexport default _c2 = withRouter(Protected);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Protected\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/reactapp/practiceapp/src/Login/Protected.jsx"],"names":["React","Route","Redirect","withRouter","Protected","component","Component","rest","isUser","JSON","parse","localStorage","getItem","props","pathname","state","from","location"],"mappings":";;;AAAA,OAAOA,KAAP,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAMA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAGC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAqC;AACnD;AACC,QAAMC,MAAM,GAAKC,IAAI,CAACC,KAAL,CAAYC,YAAY,CAACC,OAAb,CAAsB,MAAtB,CAAZ,CAAjB;AAEA,sBACG;AAAA,2BACA,QAAC,KAAD,OACIL,IADJ;AAEA,MAAA,MAAM,EAAIM,KAAK,IAAG;AACd,YAAIL,MAAJ,EAAY;AACR,8BAAO,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFD,MAEK;AACD,8BACI,QAAC,QAAD;AACA,YAAA,EAAE,EAAI;AACFC,cAAAA,QAAQ,EAAG,GADT;AAEFC,cAAAA,KAAK,EAAG;AACJC,gBAAAA,IAAI,EAAEH,KAAK,CAACI;AADR;AAFN;AADN;AAAA;AAAA;AAAA;AAAA,kBADJ;AAWH;AACJ;AAlBD;AAAA;AAAA;AAAA;AAAA;AADA,mBADH;AAiCJ,CArCD;;KAAMb,S;AA0CN,qBAAeD,UAAU,CAACC,SAAD,CAAzB","sourcesContent":["import React, {}  from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\n\r\n\r\n\r\nconst Protected = ({component : Component, ...rest}) =>{\r\n    //  If Auth is Available Redirect User to Home else to Login Page\r\n     const isUser =   JSON.parse( localStorage.getItem( \"auth\") )\r\n\r\n     return(\r\n        <>\r\n        <Route\r\n        {...rest}\r\n        render = {props =>{\r\n            if (isUser) {\r\n                return <Component {...props}/>\r\n            }else{\r\n                return (\r\n                    <Redirect\r\n                    to = {{\r\n                        pathname : '/',\r\n                        state : {\r\n                            from: props.location\r\n                        }\r\n                    }}\r\n                />\r\n                )\r\n                \r\n            }\r\n        }}\r\n        \r\n        \r\n        \r\n        ></Route>\r\n           \r\n    \r\n         \r\n      \r\n        \r\n        </>\r\n     )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default withRouter(Protected) ;\r\n\r\n"]},"metadata":{},"sourceType":"module"}