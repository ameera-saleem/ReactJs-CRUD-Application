{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\reactapp\\\\practiceapp\\\\src\\\\Login\\\\Data.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useeffect, useState } from 'react';\nimport { withRouter } from \"react-router\";\n\nconst Data = () => {\n  _s();\n\n  const [data, setData] = useState();\n\n  const fetch = async () => {\n    const fetch = await fetch('https://jsonplaceholder.typicode.com/users');\n    const response = await response.json();\n    const data = response.data;\n    console.log(data);\n    setData(data.data);\n  };\n\n  useeffect(() => {\n    fetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_s(Data, \"lif/WApPZI6pT1W4YSJwxeyij3U=\");\n\n_c = Data;\nexport default _c2 = withRouter(Data); // try{\n//     fetch ('https://jsonplaceholder.typicode.com/users')\n//     .then( response => {\n//       if (response.ok) {\n//           return response.json() \n//       }\n//   }).then((result) => {\n//      console.log(result)\n//      })\n//     }\n//    catch (error) {\n//     console.log(error)\n//    }}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Data\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/reactapp/practiceapp/src/Login/Data.jsx"],"names":["React","useeffect","useState","withRouter","Data","data","setData","fetch","response","json","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAMA,MAAMC,IAAI,GAAI,MAAI;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,EAAhC;;AACH,QAAMK,KAAK,GAAK,YAAW;AACpB,UAAMA,KAAK,GAAI,MAAOA,KAAK,CAAC,4CAAD,CAA3B;AACN,UAAMC,QAAQ,GAAG,MAAMA,QAAQ,CAACC,IAAT,EAAvB;AACA,UAAMJ,IAAI,GAAGG,QAAQ,CAACH,IAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACCC,IAAAA,OAAO,CAACD,IAAI,CAACA,IAAN,CAAP;AACE,GANJ;;AAOGJ,EAAAA,SAAS,CAAG,MAAK;AACdM,IAAAA,KAAK;AACP,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,2BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBADJ;AAKH,CAlBD;;GAAMH,I;;KAAAA,I;AAqBN,qBAAeD,UAAU,CAACC,IAAD,CAAzB,C,CAIA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, {useeffect, useState} from 'react';\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\n\r\n\r\n\r\nconst Data =  ()=>{\r\n    const [data, setData] = useState()\r\n const fetch =   async () =>{\r\n        const fetch =  await  fetch('https://jsonplaceholder.typicode.com/users')\r\n  const response = await response.json()\r\n  const data = response.data\r\n  console.log(data)\r\n   setData(data.data)\r\n    }\r\n    useeffect  (()=> {\r\n       fetch()\r\n    }, [])\r\n    \r\n    return(\r\n        <>\r\n     <h2>Data</h2>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(Data)\r\n\r\n\r\n\r\n// try{\r\n//     fetch ('https://jsonplaceholder.typicode.com/users')\r\n//     .then( response => {\r\n//       if (response.ok) {\r\n        \r\n//           return response.json() \r\n          \r\n//       }\r\n//   }).then((result) => {\r\n//      console.log(result)\r\n//      })\r\n     \r\n//     }\r\n//    catch (error) {\r\n//     console.log(error)\r\n//    }}"]},"metadata":{},"sourceType":"module"}