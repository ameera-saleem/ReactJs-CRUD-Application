{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\reactapp\\\\practiceapp\\\\src\\\\todo\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport NoteList from './NoteList';\nimport Inputs from './Inputs';\n\nconst App = () => {\n  _s();\n\n  const [add, setArray] = useState([]);\n\n  const addNote = value => {\n    setArray(prevData => {\n      if (!value.title && !value.note) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 27\n        }, this);\n      } else {\n        return [...prevData, value];\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Inputs, {\n          createNote: addNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), add.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(NoteList, {\n            title: val.title,\n            note: val.note,\n            id: index\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"2immB/lU0EtoTWBjwYVb6/lsqRU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/reactapp/practiceapp/src/todo/App.jsx"],"names":["React","useState","NoteList","Inputs","App","add","setArray","addNote","value","prevData","title","note","map","val","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAQA,MAAMC,GAAG,GAAG,MAAK;AAAA;;AACb,QAAM,CAACC,GAAD,EAAMC,QAAN,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMM,OAAO,GAAIC,KAAD,IAAU;AAElBF,IAAAA,QAAQ,CAAEG,QAAD,IAAY;AACjB,UAAI,CAACD,KAAK,CAACE,KAAP,IAAgB,CAACF,KAAK,CAACG,IAA3B,EAAgC;AAC7B,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEF,OAHD,MAGK;AACD,eAAO,CAAC,GAAGF,QAAJ,EAAcD,KAAd,CAAP;AAEH;AAGJ,KAVO,CAAR;AAaP,GAfD;;AAiBA,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI,QAAC,MAAD;AACA,UAAA,UAAU,EAAID;AADd;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKKF,GAAG,CAACO,GAAJ,CAAQ,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrB,8BACI,QAAC,QAAD;AACJ,YAAA,KAAK,EAAID,GAAG,CAACH,KADT;AAEJ,YAAA,IAAI,EAAIG,GAAG,CAACF,IAFR;AAIJ,YAAA,EAAE,EAAIG;AAJF,aAGGA,KAHH;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SATA,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAuBH,CA1CD;;GAAMV,G;;KAAAA,G;AA6CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport NoteList from './NoteList'\r\nimport Inputs from './Inputs'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst App = () =>{\r\n    const [add, setArray] = useState([])\r\n    const addNote = (value) =>{\r\n    \r\n            setArray((prevData)=>{\r\n                if (!value.title && !value.note){\r\n                   return <h1>Wrong</h1>\r\n                   \r\n                }else{\r\n                    return [...prevData, value]\r\n                    \r\n                }\r\n                \r\n                \r\n            })\r\n        \r\n     \r\n    }\r\n    \r\n    return(\r\n        <>\r\n        <div className=\"wrapper\">\r\n            <div className=\"container\">\r\n                <Inputs\r\n                createNote = {addNote}\r\n                />\r\n                \r\n                {add.map((val, index) => {\r\n                    return(\r\n                        <NoteList\r\n                    title = {val.title}\r\n                    note = {val.note}\r\n                    key = {index}\r\n                    id = {index}\r\n                    />\r\n                    ) \r\n                })}\r\n                \r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}