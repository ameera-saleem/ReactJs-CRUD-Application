{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\reactapp\\\\practiceapp\\\\src\\\\Login\\\\Data.jsx\";\nimport React from 'react';\nimport { withRouter } from \"react-router\";\nimport Home from './Home';\nimport { Link, Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nconst Data = props => {\n  const data = props.data;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/home\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this), data && data.map(data => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 31\n    }, this))]\n  }, void 0, true);\n};\n\n_c = Data;\nexport default _c2 = withRouter(Data); // try{\n//     fetch ('https://jsonplaceholder.typicode.com/users')\n//     .then( response => {\n//       if (response.ok) {\n//           return response.json() \n//       }\n//   }).then((result) => {\n//      console.log(result)\n//      })\n//     }\n//    catch (error) {\n//     console.log(error)\n//    }}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Data\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/reactapp/practiceapp/src/Login/Data.jsx"],"names":["React","withRouter","Home","Link","Route","BrowserRouter","Router","Switch","Data","props","data","map","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,aAAa,IAAIC,MAAtC,EAA8CC,MAA9C,QAA2D,kBAA3D;;AAMA,MAAMC,IAAI,GAAKC,KAAD,IAAS;AACpB,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AAGC,sBACI;AAAA,4BACC,QAAC,MAAD;AAAA,6BACG,QAAC,MAAD;AAAA,gCACH,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAG,OAApB;AAAA,uCAA+B,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADG,eAEH,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADD,EAOHA,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASD,IAAI,iBAAI;AAAA,gBAAKA,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,YAAjB,CAPL;AAAA,kBADJ;AAWH,CAfD;;KAAMJ,I;AAkBN,qBAAeP,UAAU,CAACO,IAAD,CAAzB,C,CAIA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport { withRouter } from \"react-router\";\r\nimport Home from './Home';\r\nimport {Link, Route, BrowserRouter as Router, Switch} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n\r\nconst Data =  (props)=>{\r\n   const data = props.data\r\n   \r\n    \r\n    return(\r\n        <>\r\n         <Router>\r\n            <Switch>\r\n         <Route exact path = '/home'  > <Home/></Route>\r\n         <Link to = \"/\">Home</Link>\r\n        </Switch>\r\n         </Router>\r\n    {data && data.map(data => <h1>{data.name}</h1> ) } \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(Data)\r\n\r\n\r\n\r\n// try{\r\n//     fetch ('https://jsonplaceholder.typicode.com/users')\r\n//     .then( response => {\r\n//       if (response.ok) {\r\n        \r\n//           return response.json() \r\n          \r\n//       }\r\n//   }).then((result) => {\r\n//      console.log(result)\r\n//      })\r\n     \r\n//     }\r\n//    catch (error) {\r\n//     console.log(error)\r\n//    }}"]},"metadata":{},"sourceType":"module"}