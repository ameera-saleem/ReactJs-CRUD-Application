{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\reactapp\\\\practiceapp\\\\src\\\\Login\\\\Auth.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBInput, MDBIcon } from 'mdbreact';\nimport 'mdbreact/dist/css/mdb.css';\n\nconst Auth = props => {\n  _s();\n\n  const [Register, setRegister] = useState();\n  const [empty, setEmpty] = useState(false);\n  const [error, setError] = useState(false);\n  const [value, setValue] = useState({\n    email: '',\n    password: ''\n  });\n\n  const inputValue = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValue(prevData => {\n      return { ...prevData,\n        [name]: value\n      };\n    });\n  };\n\n  const Onsubmit = e => {\n    if (value.email === '' && value.password === '') {\n      setEmpty(true);\n      setTimeout(() => {\n        setEmpty(false);\n      }, 2000);\n      return;\n    }\n\n    try {\n      fetch('http://localhost:8000/auth/login', {\n        method: 'POST',\n        headers: {\n          \"Accept\": 'application/json',\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify(value)\n      }).then(response => {\n        if (!response.ok) {\n          setError(true);\n          e.preventDefault();\n          setTimeout(() => {\n            setError(false);\n          }, 2000);\n          return;\n        } else {\n          return response.json();\n        }\n      }).then(result => {\n        if (result && value !== 'undefined' && value !== null) {\n          localStorage.setItem(\"auth\", JSON.stringify(result.access_token));\n          props.history.push('/home');\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onRegister = e => {\n    if (value.email === '' && value.password === '') {\n      setEmpty(true);\n      setTimeout(() => {\n        setEmpty(false);\n      }, 2000);\n      return;\n    }\n\n    try {\n      fetch('http://localhost:8000/auth/register', {\n        method: 'POST',\n        headers: {\n          \"Accept\": 'application/json',\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify(value)\n      }).then(response => {\n        if (!response.ok) {\n          setError(true);\n          e.preventDefault();\n          setTimeout(() => {\n            setError(false);\n          }, 2000);\n          return;\n        } else {\n          return response.json();\n        }\n      }).then(result => {\n        if (result && value !== 'undefined' && value !== null) {\n          localStorage.setItem(\"auth\", JSON.stringify(result.access_token));\n          props.history.push('/home');\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!Register ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: inputValue,\n          value: value.email,\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 12\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 101\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'white'\n          },\n          children: \"Incorrect email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: inputValue,\n          value: value.password,\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 108\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'white'\n          },\n          children: \"Incorrect password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Onsubmit,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setRegister(true),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), empty ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'white'\n          },\n          children: \"Please Fill in your field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 18\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: inputValue,\n        value: value.email,\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 98\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Incorrect password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 18\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: inputValue,\n        value: value.password,\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 107\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Incorrect password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 18\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRegister(false),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), empty ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Please Fill in your field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 18\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: /*#__PURE__*/_jsxDEV(MDBRow, {\n        children: /*#__PURE__*/_jsxDEV(MDBCol, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(MDBCard, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header pt-3 grey lighten-2\",\n              children: /*#__PURE__*/_jsxDEV(MDBRow, {\n                className: \"d-flex justify-content-start\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"deep-grey-text mt-3 mb-4 pb-1 mx-5\",\n                  children: \"Log in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MDBCardBody, {\n              className: \"mx-4 mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n                onChange: inputValue,\n                value: value.email,\n                name: \"email\",\n                label: \"Your email\",\n                group: true,\n                type: \"text\",\n                validate: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                label: \"Your password\",\n                group: true,\n                type: \"password\",\n                validate: true,\n                containerClass: \"mb-0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mb-4 mt-5\",\n                children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  color: \"danger\",\n                  type: \"button\",\n                  className: \"btn-block z-depth-2\",\n                  children: \"Log in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-small grey-text d-flex justify-content-center\",\n                children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#!\",\n                  className: \"dark-grey-text font-weight-bold ml-1\",\n                  children: \"Sign up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Auth, \"vnchAymJCjg8C1QBN1FGJgAx85c=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["D:/reactapp/practiceapp/src/Login/Auth.jsx"],"names":["React","useState","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBCard","MDBCardBody","MDBInput","MDBIcon","Auth","props","Register","setRegister","empty","setEmpty","error","setError","value","setValue","email","password","inputValue","event","name","target","prevData","Onsubmit","e","setTimeout","fetch","method","headers","body","JSON","stringify","then","response","ok","preventDefault","json","result","localStorage","setItem","access_token","history","push","console","log","onRegister","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBInput, MDBIcon } from 'mdbreact';\r\nimport 'mdbreact/dist/css/mdb.css'\r\n\r\n\r\n\r\n\r\n\r\nconst Auth = (props)=>{\r\n  \r\n    const [Register, setRegister] = useState()\r\n    const [empty, setEmpty] = useState(false)\r\n    const [error, setError] = useState(false)\r\n    const [value, setValue] = useState({\r\n        email: '',\r\n        password: ''\r\n      })\r\n\r\n\r\n    const inputValue = (event) =>{\r\n        const {name, value} = event.target\r\n        setValue((prevData) =>{\r\n          return {...prevData,\r\n            [name] : value}\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    const Onsubmit = (e) =>{\r\n      \r\n      if(value.email === '' && value.password === ''){\r\n        setEmpty(true)\r\n        setTimeout(() => {\r\n          setEmpty(false)\r\n        }, 2000);\r\n        return ;\r\n      }\r\n     \r\n      \r\n      try{ fetch('http://localhost:8000/auth/login', {\r\n        method : 'POST',\r\n        headers : {\r\n          \"Accept\" : 'application/json',\r\n          \"Content-Type\" : 'application/json'\r\n        },\r\n        body : \r\n         JSON.stringify(value)\r\n       }).then( response => {\r\n        if (!response.ok) {\r\n          setError(true)\r\n          e.preventDefault()\r\n        setTimeout(() => {\r\n          setError(false)\r\n        }, 2000); \r\n          return\r\n        }\r\n        else {\r\n            return response.json() \r\n        }\r\n    }).then((result) => {\r\n      if(result && value !== 'undefined' && value !== null){\r\n        localStorage.setItem(\"auth\",JSON.stringify(result.access_token))\r\n        props.history.push('/home')\r\n          \r\n      }\r\n      \r\n       } )\r\n       \r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n      }\r\n      \r\n    }\r\n\r\n    const onRegister = (e) =>{\r\n     \r\n\r\n      if(value.email === '' && value.password === ''){\r\n        setEmpty(true)\r\n        setTimeout(() => {\r\n          setEmpty(false)\r\n        }, 2000);\r\n        return ;\r\n      }\r\n     \r\n      \r\n      try{ fetch('http://localhost:8000/auth/register', {\r\n        method : 'POST',\r\n        headers : {\r\n          \"Accept\" : 'application/json',\r\n          \"Content-Type\" : 'application/json'\r\n        },\r\n        body : \r\n         JSON.stringify(value)\r\n       }).then( response => {\r\n        if (!response.ok) {\r\n          setError(true)\r\n          e.preventDefault()\r\n        setTimeout(() => {\r\n          setError(false)\r\n        }, 2000); \r\n          return\r\n        }\r\n        else {\r\n            return response.json() \r\n        }\r\n    }).then((result) => {\r\n      if(result && value !== 'undefined' && value !== null){\r\n        localStorage.setItem(\"auth\",JSON.stringify(result.access_token))\r\n        props.history.push('/home')\r\n          \r\n      }\r\n      \r\n       } )\r\n       \r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n      }\r\n      \r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        {!Register ?\r\n         <div className = \"wrapper\">\r\n\r\n           <div className=\"container\">\r\n           <input type='text' onChange = {inputValue} value = {value.email} name = \"email\"></input> <br/> \r\n         {error ? <p style = {{color : 'white'}}>Incorrect email</p> : null } \r\n         <input type='password' onChange = {inputValue} value = {value.password} name = 'password'></input><br/>\r\n         {error ? <p style = {{color : 'white'}}>Incorrect password</p> : null } \r\n        <button onClick = {Onsubmit}>Login</button> \r\n        <button onClick = {() => setRegister(true) }>Register</button> \r\n        {empty ? <p style = {{color : 'white'}}>Please Fill in your field</p> : null }\r\n        </div>\r\n         \r\n        </div>\r\n        :\r\n        <div>\r\n        <input type='text' onChange = {inputValue} value = {value.email} name = \"email\"></input> <br/>\r\n        {error ? <p style = {{color : 'white'}}>Incorrect password</p> : null } \r\n        <input type='password' onChange = {inputValue} value = {value.password} name = 'password'></input><br/>\r\n        {error ? <p style = {{color : 'white'}}>Incorrect password</p> : null } \r\n        \r\n        <button onClick = {onRegister}>Register</button> \r\n        <button onClick = {() => setRegister(false)}>Login</button> \r\n        {empty ? <p style = {{color : 'white'}}>Please Fill in your field</p> : null }\r\n        </div>\r\n         }\r\n\r\n\r\n\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"6\">\r\n          <MDBCard>\r\n            <div className=\"header pt-3 grey lighten-2\">\r\n              <MDBRow className=\"d-flex justify-content-start\">\r\n                <h3 className=\"deep-grey-text mt-3 mb-4 pb-1 mx-5\">\r\n                  Log in\r\n                </h3>\r\n              </MDBRow>\r\n            </div>\r\n            <MDBCardBody className=\"mx-4 mt-4\">\r\n              <MDBInput  onChange = {inputValue} value = {value.email} name = \"email\" label=\"Your email\" group type=\"text\" validate />\r\n              <MDBInput\r\n                label=\"Your password\"\r\n                group\r\n                type=\"password\"\r\n                validate\r\n                containerClass=\"mb-0\"\r\n              />\r\n              <div className=\"text-center mb-4 mt-5\">\r\n                <MDBBtn\r\n                  color=\"danger\"\r\n                  type=\"button\"\r\n                  className=\"btn-block z-depth-2\"\r\n                >\r\n                  Log in\r\n                </MDBBtn>\r\n              </div>\r\n              <p className=\"font-small grey-text d-flex justify-content-center\">\r\n                Don't have an account?\r\n                <a\r\n                  href=\"#!\"\r\n                  className=\"dark-grey-text font-weight-bold ml-1\"\r\n                >\r\n                  Sign up\r\n                </a>\r\n              </p>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n\r\n       \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Auth"]},"metadata":{},"sourceType":"module"}