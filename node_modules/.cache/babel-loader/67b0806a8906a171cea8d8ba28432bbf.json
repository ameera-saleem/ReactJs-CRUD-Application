{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\reactapp\\\\practiceapp\\\\src\\\\Login\\\\Auth.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBInput } from 'mdbreact';\nimport 'mdbreact/dist/css/mdb.css';\n\nconst Auth = props => {\n  _s();\n\n  const [Register, setRegister] = useState();\n  const [empty, setEmpty] = useState(false);\n  const [error, setError] = useState(false);\n  const [value, setValue] = useState({\n    email: '',\n    password: ''\n  });\n\n  const inputValue = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValue(prevData => {\n      return { ...prevData,\n        [name]: value\n      };\n    });\n  };\n\n  const Onsubmit = e => {\n    if (value.email === '' && value.password === '') {\n      setEmpty(true);\n      setTimeout(() => {\n        setEmpty(false);\n      }, 1000);\n      return;\n    }\n\n    try {\n      fetch('http://localhost:8000/auth/login', {\n        method: 'POST',\n        headers: {\n          \"Accept\": 'application/json',\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify(value)\n      }).then(response => {\n        if (!response.ok) {\n          setError(true);\n          e.preventDefault();\n          setTimeout(() => {\n            setError(false);\n          }, 2000);\n          return;\n        } else {\n          return response.json();\n        }\n      }).then(result => {\n        if (result && value !== 'undefined' && value !== null) {\n          localStorage.setItem(\"auth\", JSON.stringify(result.access_token));\n          props.history.push('/home');\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onRegister = e => {\n    if (value.email === '' && value.password === '') {\n      setEmpty(true);\n      setTimeout(() => {\n        setEmpty(false);\n      }, 2000);\n      return;\n    }\n\n    try {\n      fetch('http://localhost:8000/auth/register', {\n        method: 'POST',\n        headers: {\n          \"Accept\": 'application/json',\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify(value)\n      }).then(response => {\n        if (!response.ok) {\n          setError(true);\n          e.preventDefault();\n          setTimeout(() => {\n            setError(false);\n          }, 2000);\n          return;\n        } else {\n          return response.json();\n        }\n      }).then(result => {\n        if (result && value !== 'undefined' && value !== null) {\n          localStorage.setItem(\"auth\", JSON.stringify(result.access_token));\n          props.history.push('/home');\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: !Register ? /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: /*#__PURE__*/_jsxDEV(MDBCol, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(MDBCard, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header pt-3 grey lighten-2\",\n                children: /*#__PURE__*/_jsxDEV(MDBRow, {\n                  className: \"d-flex justify-content-start\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"deep-grey-text mt-3 mb-4 pb-1 mx-5\",\n                    children: \"Log in\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(MDBCardBody, {\n                className: \"mx-4 mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n                  label: \"Your email\",\n                  group: true,\n                  type: \"text\",\n                  validate: true,\n                  onChange: inputValue,\n                  value: value.email,\n                  name: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(MDBInput // <p style = {{color : 'red'}}>Incorrect email</p>\n                , {\n                  onChange: inputValue,\n                  value: value.password,\n                  name: \"password\",\n                  label: \"Your password\",\n                  group: true,\n                  type: \"password\",\n                  validate: true,\n                  containerClass: \"mb-0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center mb-4 mt-5\",\n                  children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n                    onClick: Onsubmit,\n                    color: \"danger\",\n                    type: \"button\",\n                    className: \"btn-block z-depth-2\",\n                    children: \"Log In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 19\n                  }, this), empty ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: \"Please Fill in your field\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-small grey-text d-flex justify-content-center\",\n                  children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(MDBBtn, {\n                    color: \"danger\",\n                    type: \"button\",\n                    id: \"register-btn\",\n                    className: \"  z-depth-2\",\n                    onClick: () => setRegister(true),\n                    children: \"Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: /*#__PURE__*/_jsxDEV(MDBCol, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(MDBCard, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header pt-3 grey lighten-2\",\n                children: /*#__PURE__*/_jsxDEV(MDBRow, {\n                  className: \"d-flex justify-content-start\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"deep-grey-text mt-3 mb-4 pb-1 mx-5\",\n                    children: \"Log in\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(MDBCardBody, {\n                className: \"mx-4 mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n                  label: \"Your email\",\n                  group: true,\n                  type: \"text\",\n                  validate: true,\n                  onChange: inputValue,\n                  value: value.email,\n                  name: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 15\n                }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: 'white'\n                  },\n                  children: \"Incorrect email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 24\n                }, this) : null, /*#__PURE__*/_jsxDEV(MDBInput, {\n                  onChange: inputValue,\n                  value: value.password,\n                  name: \"password\",\n                  label: \"Your password\",\n                  group: true,\n                  type: \"password\",\n                  validate: true,\n                  containerClass: \"mb-0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 15\n                }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: 'white'\n                  },\n                  children: \"Incorrect password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 25\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center mb-4 mt-5\",\n                  children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n                    onClick: Onsubmit,\n                    color: \"danger\",\n                    type: \"button\",\n                    className: \"btn-block z-depth-2\",\n                    children: \"Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 17\n                  }, this), empty ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: 'white'\n                    },\n                    children: \"Please Fill in your field\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 25\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-small grey-text d-flex justify-content-center\",\n                  children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(MDBBtn, {\n                    color: \"danger\",\n                    type: \"button\",\n                    id: \"register-btn\",\n                    className: \"  z-depth-2\",\n                    onClick: () => setRegister(false),\n                    children: \"Login In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n\n_s(Auth, \"vnchAymJCjg8C1QBN1FGJgAx85c=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["D:/reactapp/practiceapp/src/Login/Auth.jsx"],"names":["React","useState","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBCard","MDBCardBody","MDBInput","Auth","props","Register","setRegister","empty","setEmpty","error","setError","value","setValue","email","password","inputValue","event","name","target","prevData","Onsubmit","e","setTimeout","fetch","method","headers","body","JSON","stringify","then","response","ok","preventDefault","json","result","localStorage","setItem","access_token","history","push","console","log","onRegister","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBInput } from 'mdbreact';\r\nimport 'mdbreact/dist/css/mdb.css'\r\n\r\n\r\n\r\n\r\n\r\nconst Auth = (props)=>{\r\n  \r\n    const [Register, setRegister] = useState()\r\n    const [empty, setEmpty] = useState(false)\r\n    const [error, setError] = useState(false)\r\n    const [value, setValue] = useState({\r\n        email: '',\r\n        password: ''\r\n      })\r\n\r\n\r\n    const inputValue = (event) =>{\r\n        const {name, value} = event.target\r\n        setValue((prevData) =>{\r\n          return {...prevData,\r\n            [name] : value}\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    const Onsubmit = (e) =>{\r\n      \r\n      if(value.email === '' && value.password === ''){\r\n        setEmpty(true)\r\n        setTimeout(() => {\r\n          setEmpty(false)\r\n        }, 1000);\r\n        return ;\r\n      }\r\n     \r\n      \r\n      try{ fetch('http://localhost:8000/auth/login', {\r\n        method : 'POST',\r\n        headers : {\r\n          \"Accept\" : 'application/json',\r\n          \"Content-Type\" : 'application/json'\r\n        },\r\n        body : \r\n         JSON.stringify(value)\r\n       }).then( response => {\r\n        if (!response.ok) {\r\n          setError(true)\r\n          e.preventDefault()\r\n        setTimeout(() => {\r\n          setError(false)\r\n        }, 2000); \r\n          return\r\n        }\r\n        else {\r\n            return response.json() \r\n        }\r\n    }).then((result) => {\r\n      if(result && value !== 'undefined' && value !== null){\r\n        localStorage.setItem(\"auth\",JSON.stringify(result.access_token))\r\n        props.history.push('/home')\r\n          \r\n      }\r\n      \r\n       } )\r\n       \r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n      }\r\n      \r\n    }\r\n\r\n    const onRegister = (e) =>{\r\n     \r\n\r\n      if(value.email === '' && value.password === ''){\r\n        setEmpty(true)\r\n        setTimeout(() => {\r\n          setEmpty(false)\r\n        }, 2000);\r\n        return ;\r\n      }\r\n     \r\n      \r\n      try{ fetch('http://localhost:8000/auth/register', {\r\n        method : 'POST',\r\n        headers : {\r\n          \"Accept\" : 'application/json',\r\n          \"Content-Type\" : 'application/json'\r\n        },\r\n        body : \r\n         JSON.stringify(value)\r\n       }).then( response => {\r\n        if (!response.ok) {\r\n          setError(true)\r\n          e.preventDefault()\r\n        setTimeout(() => {\r\n          setError(false)\r\n        }, 2000); \r\n          return\r\n        }\r\n        else {\r\n            return response.json() \r\n        }\r\n    }).then((result) => {\r\n      if(result && value !== 'undefined' && value !== null){\r\n        localStorage.setItem(\"auth\",JSON.stringify(result.access_token))\r\n        props.history.push('/home')\r\n          \r\n      }\r\n      \r\n       } )\r\n       \r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n      }\r\n      \r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        \r\n         <div className = \"wrapper\">\r\n         {!Register ?\r\n        <MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"6\">\r\n          <MDBCard>\r\n            <div className=\"header pt-3 grey lighten-2\">\r\n              <MDBRow className=\"d-flex justify-content-start\">\r\n                <h3 className=\"deep-grey-text mt-3 mb-4 pb-1 mx-5\">\r\n                  Log in\r\n                </h3>\r\n              </MDBRow>\r\n            </div>\r\n            <MDBCardBody className=\"mx-4 mt-4\">\r\n              <MDBInput label=\"Your email\" group type=\"text\" validate onChange = {inputValue} value = {value.email} name = \"email\" />\r\n              <MDBInput\r\n              // <p style = {{color : 'red'}}>Incorrect email</p>\r\n              onChange = {inputValue} value = {value.password} name = 'password'\r\n                label=\"Your password\"\r\n                group\r\n                type=\"password\"\r\n                validate\r\n                containerClass=\"mb-0\"\r\n              />\r\n               {/* {error ? <p style = {{color : 'white'}}>Incorrect password</p> : null }  */}\r\n              <div className=\"text-center mb-4 mt-5\">\r\n                  <MDBBtn\r\n                 onClick = {Onsubmit}\r\n                  color=\"danger\"\r\n                  type=\"button\"\r\n                  className=\"btn-block z-depth-2\"\r\n                >\r\n                Log In\r\n                </MDBBtn>\r\n                \r\n                \r\n               {empty ? <p style = {{color : 'red'}}>Please Fill in your field</p> : null }\r\n              </div>\r\n              <p className=\"font-small grey-text d-flex justify-content-center\">\r\n                Don't have an account?\r\n                <MDBBtn\r\n                  color=\"danger\"\r\n                  type=\"button\"\r\n                  id = \"register-btn\"\r\n                  className=\"  z-depth-2\"\r\n                 onClick = {() => setRegister(true) }\r\n                >\r\n                Sign Up\r\n              </MDBBtn> \r\n              </p>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n         :\r\n         <MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"6\">\r\n          <MDBCard>\r\n            <div className=\"header pt-3 grey lighten-2\">\r\n              <MDBRow className=\"d-flex justify-content-start\">\r\n                <h3 className=\"deep-grey-text mt-3 mb-4 pb-1 mx-5\">\r\n                  Log in\r\n                </h3>\r\n              </MDBRow>\r\n            </div>\r\n            <MDBCardBody className=\"mx-4 mt-4\">\r\n              <MDBInput label=\"Your email\" group type=\"text\" validate onChange = {inputValue} value = {value.email} name = \"email\" />\r\n              {error ? <p style = {{color : 'white'}}>Incorrect email</p> : null } \r\n              <MDBInput\r\n              onChange = {inputValue} value = {value.password} name = 'password'\r\n                label=\"Your password\"\r\n                group\r\n                type=\"password\"\r\n                validate\r\n                containerClass=\"mb-0\"\r\n              />\r\n               {error ? <p style = {{color : 'white'}}>Incorrect password</p> : null } \r\n              <div className=\"text-center mb-4 mt-5\">\r\n                <MDBBtn\r\n                 onClick = {Onsubmit}\r\n                  color=\"danger\"\r\n                  type=\"button\"\r\n                  className=\"btn-block z-depth-2\"\r\n                >\r\n                  Sign Up\r\n                </MDBBtn> \r\n                \r\n               {empty ? <p style = {{color : 'white'}}>Please Fill in your field</p> : null }\r\n              </div>\r\n              <p className=\"font-small grey-text d-flex justify-content-center\">\r\n                Already have an account?\r\n                <MDBBtn\r\n                  color=\"danger\"\r\n                  type=\"button\"\r\n                  id = \"register-btn\"\r\n                  className=\"  z-depth-2\"\r\n                 onClick = {() => setRegister(false) }\r\n                >\r\n                Login In\r\n              </MDBBtn> \r\n              </p>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n      }\r\n        </div>\r\n{/*         \r\n        // <div>\r\n        // <input type='text' onChange = {inputValue} value = {value.email} name = \"email\"></input> <br/>\r\n        // {error ? <p style = {{color : 'white'}}>Incorrect password</p> : null } \r\n        // <input type='password' onChange = {inputValue} value = {value.password} name = 'password'></input><br/>\r\n        // {error ? <p style = {{color : 'white'}}>Incorrect password</p> : null } \r\n        \r\n        // <button onClick = {onRegister}>Register</button> \r\n        // <button onClick = {() => setRegister(false)}>Login</button> \r\n        // {empty ? <p style = {{color : 'white'}}>Please Fill in your field</p> : null }\r\n        // </div> */}\r\n       \r\n       \r\n\r\n       \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Auth"]},"metadata":{},"sourceType":"module"}